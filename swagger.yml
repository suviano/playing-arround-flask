openapi: "3.0.2"
info:
  title: Account management
  version: "1.0"
servers:
  - url: http://localhost/v1

components:
  schemas:
    account:
      type: object
      properties:
        saldo:
          type: number
          format: double
        limiteSaqueDiario:
          type: number
          format: double
        flagAtivo:
          type: boolean
        tipoConta:
          type: integer
    create_person:
      type: object
      properties:
        nome:
          type: string
        cpf:
          type: string
        dataNascimento:
          type: string
          format: date
    account_existing_person:
      required:
        - idPessoa
        - saldo
        - limiteSaqueDiario
        - flagAtivo
        - tipoConta
      allOf:
        - $ref: "#/components/schemas/account"
        - properties:
            idPessoa:
              type: integer
    account_new_person:
      required:
        - saldo
        - limiteSaqueDiario
        - flagAtivo
        - tipoConta
        - nome
        - cpf
        - dataNascimento
      allOf:
        - $ref: "#/components/schemas/account"
        - $ref: "#/components/schemas/create_person"
    deposit:
      properties:
        value:
          type: number
          minimum: 0
          exclusiveMinimum: true
    account_blocked:
      properties:
        error:
          type: string
          example: Conta esta bloqueada
    deposit_minimum_value:
      properties:
        error:
          type: string
          example: |
            O deposito não pode ser usado para saque na conta. Não e permido valores negativos
    account_balance:
      properties:
        saldo:
          type: string
          example: R$ xxxx.xxx
        bloqueado:
          type: boolean
          example: true
paths:
  /account:
    post:
      summary: Criação de uma conta, tambem cria pessoa caso informações sejam passadas
      requestBody:
        description: |
          Informações da conta
          Caso pessoa nao existe a hava os dados para criação esse será feito
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/account_new_person"
                - $ref: "#/components/schemas/account_existing_person"
      responses:
        "201":
          description: sucesso
          headers:
            Content-Location:
              schema:
                type: string
              example: /account/<ACCOUNT_ID>
        "400":
          description: requisição invalida
        "500":
          description: ocorreu um erro no servidor
  /account/{account_id}/deposit:
    post:
      summary: Executa uma transação para depósito
      parameters:
        - name: "account_id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: uuid
      requestBody:
        description: Modelo com valor do depósito
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deposit"
      responses:
        "201":
          description: sucesso
          headers:
            Content-Location:
              schema:
                type: string
              example: /account/<ACCOUNT_ID>/transaction/<TRANSACTION_ID>
        "400":
          description: deposito nao pode ser ZERO ou ter valor negativo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deposit_minimum_value"
        "403":
          description: conta bloqueada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_blocked"
        "404":
          description: conta não encontrada
        "500":
          description: ocorreu um erro no servidor
  /account/{account_id}/balance/:
    get:
      summary: Consulta de saldo em determinada conta
      parameters:
        - name: "account_id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: uuid
      responses:
        "200":
          description: sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_balance"
        "404":
          description: conta não encontrada
        "500":
          description: ocorreu um erro no servidor
  /account/{account_id}/withdraw:
    post:
      summary: saque em uma conta
      parameters:
        - name: "account_id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: uuid
      responses:
        "200":
          description: OK
        "403":
          description: Operação não foi autorizada
        "500":
          description: ocorreu um erro no servidor
  /account/{account_id}/block:
    patch:
      summary: bloqueio de uma conta
      parameters:
        - name: "account_id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: uuid
      responses:
        "204":
          description: operação concluida com sucesso
        "400":
          description: requisição invalida
        "404":
          description: conta nao encontrada
        "500":
          description: ocorreu um erro no servidor
  /account/{account_id}/transactions:
    get:
      description: extrato das transações da conta
      summary: extrato de transacoes feita por uma conta
      parameters:
        - name: "account_id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: uuid
        - name: "begin-date"
          in: "query"
          required: false
          example: 2021-06-13T20:14:29.058087
          schema:
            type: "string"
            format: date-time
        - name: "end-date"
          in: "query"
          required: false
          example: 2021-06-13T20:14:40.058087
          schema:
            type: "string"
            format: date-time
        - name: next-page-cursor
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  items:
                    type: object
                    properties:
                      dataTransacao:
                        type: string
                        format: date-time
                      idConta:
                        type: string
                        format: uuid
                      idTransacao:
                        type: string
                        format: uuid
                      valor:
                        type: number
                        format: double
                  nextCursor:
                    type: string
        "500":
          description: ocorreu um erro no servidor
